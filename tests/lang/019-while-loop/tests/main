+------------------------------------------------------------------------------
| main.main():void
+------------------------------------------------------------------------------
stack-size: 112
stack-bitmap: 00000002
const-pool-bytes: 64
const-pool-bitmap: 00000002
captured-var-size: 0
exception-table-size: 0
souce-line-size: 68
souce-file-name: tests/lang/019-while-loop/main/main.mai
bytecode-size: 68
bytecode: 
    000 CheckStack; (3)
    001 LdaSmi32 #0; (4)
    002 Star32 [BP-68]; (4)
    003 LdaSmi32 #100; (5)
    004 Star32 [BP-72]; (5)
    005 TestLessThan32 [BP-68], [BP-72]; (5)
    006 ForwardJumpIfFalse 0, #6; (5)
    007 LdaSmi32 #1; (6)
    008 Star32 [BP-72]; (6)
    009 Add32 [BP-68], [BP-72]; (6)
    010 Star32 [BP-68]; (6)
    011 BackwardJump 0, #8; (5)
    012 LdaSmi32 #100; (8)
    013 Star32 [BP-72]; (8)
    014 TestEqual32 [BP-68], [BP-72]; (8)
    015 Star32 [BP-72]; (8)
    016 Move32 [BP-116], [BP-72]; (8)
    017 LdaConstPtr [KP+32]; (8)
    018 StarPtr [BP-124]; (8)
    019 LdaGlobalPtr [GS+160]; (8)
    020 CallNativeFunction #0, #12; (8)
    021 LdaSmi32 #1000000; (10)
    022 Star32 [BP-72]; (10)
    023 Move32 [BP-116], [BP-72]; (10)
    024 LdaGlobalPtr [GS+264]; (10)
    025 CallBytecodeFunction #0, #4; (10)
    026 Star32 [BP-72]; (10)
    027 LdaConst32 [KP+0]; (10)
    028 Star32 [BP-76]; (10)
    029 TestEqual32 [BP-72], [BP-76]; (10)
    030 Star32 [BP-72]; (10)
    031 Move32 [BP-116], [BP-72]; (10)
    032 LdaConstPtr [KP+32]; (10)
    033 StarPtr [BP-124]; (10)
    034 LdaGlobalPtr [GS+160]; (10)
    035 CallNativeFunction #0, #12; (10)
    036 NewObject #0, [KP+4]; (12)
    037 StarPtr [BP-88]; (12)
    038 LdaSmi32 #100; (12)
    039 Star32 [BP-72]; (12)
    040 MovePtr [BP-120], [BP-88]; (12)
    041 Move32 [BP-124], [BP-72]; (12)
    042 LdaConstPtr [KP+40]; (12)
    043 CallBytecodeFunction #0, #12; (12)
    044 StarPtr [BP-88]; (12)
    045 LdaSmi32 #0; (13)
    046 Star32 [BP-76]; (13)
    047 LdaSmi32 #100; (13)
    048 Star32 [BP-80]; (13)
    049 TestGreaterThanOrEqual32 [BP-76], [BP-80]; (13)
    050 ForwardJumpIfTrue 0, #12; (13)
    051 Move32 [BP-72], [BP-76]; (13)
    052 LdaSmi32 #100; (14)
    053 Star32 [BP-100]; (14)
    054 MovePtr [BP-120], [BP-88]; (14)
    055 Move32 [BP-124], [BP-72]; (14)
    056 Move32 [BP-128], [BP-100]; (14)
    057 LdaGlobalPtr [GS+256]; (14)
    058 RunCoroutine 0, #16; (14)
    059 Yield 2; (14)
    060 Increment32 [BP-76], #1; (13)
    061 BackwardJump 0, #12; (13)
    062 MovePtr [BP-96], [BP-88]; (16)
    063 MovePtr [BP-120], [BP-96]; (16)
    064 LdaGlobalPtr [GS+128]; (16)
    065 CallNativeFunction #0, #8; (16)
    066 Yield 2; (16)
    067 Return; (3)
